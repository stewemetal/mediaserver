version: '3.7'

services:

    plex:
        
        container_name: plex
        image: linuxserver/plex
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 32400:32400
            - 32400:32400/udp
            - 32469:32469
            - 32469:32469/udp
            - 5353:5353/udp
            - 1900:1900/udp
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
            - PLEX_CLAIM=${PLEX_TOKEN}
            - VERSION=${PLEX_VERSION_TAG}
            - UMASK_SET=022
        hostname: ${PLEX_HOSTNAME}
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/plex:/config'
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/plex/transcode:/transcode'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_TV_SHOWS_FOLDER}:/data/tvshows'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_ANIME_FOLDER}:/data/anime'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_MOVIES_FOLDER}:/data/movies'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - traefik.enable=true
            - traefik.http.routers.plex.rule=Host('${PLEX_SUBDOMAIN}.${DDNS_DOMAIN}')
            - traefik.http.routers.plex.entrypoints=websecure
            - traefik.http.routers.plex.tls.certresolver=myresolver
            - traefik.http.services.plex.loadbalancer.server.port=32400
    
    qbittorrent:
    
        image: linuxserver/qbittorrent
        container_name: qbittorrent
        restart: unless-stopped
        networks:
            - app-net
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TIMEZONE}
            - UMASK_SET=022
            - WEBUI_PORT=${QBITTORRENT_WEBUI_PORT}
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/qbittorrent:/config'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_STAGING_FOLDER}:/downloads'
            - '${MEDIA_SERVER_ROOT}/${TORRENT_STORAGE_FOLDER}:/torrents'
            - '${MEDIA_SERVER_ROOT}/${TORRENT_WATCH_FOLDER}:/torrent-watch'
        ports:
            - 6881:6881
            - 6881:6881/udp
            - ${QBITTORRENT_WEBUI_PORT}:${QBITTORRENT_WEBUI_PORT}
            - 10625:10625
        labels:
            - traefik.enable=true
            - traefik.http.routers.qbittorrent.rule=Host('${QBITTORRENT_SUBDOMAIN}.${DDNS_DOMAIN}')
            - traefik.http.routers.qbittorrent.entrypoints=websecure
            - traefik.http.routers.qbittorrent.tls.certresolver=myresolver
            - traefik.http.services.qbittorrent.loadbalancer.server.port=${QBITTORRENT_WEBUI_PORT}
            - traefik.http.services.qbittorrent.loadbalancer.passhostheader=false

    sonarr:
        
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 8989:8989
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
            - UMASK_SET=022
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/sonarr:/config'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_STAGING_FOLDER}:/data/staging'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_TV_SHOWS_FOLDER}:/data/tvshows'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_ANIME_FOLDER}:/data/anime'
            - '/etc/localtime:/etc/localtime:ro'
        links:
            # use http://jackett:8989 instead of http://localhost:8989 when adding indexer
            - jackett:jackett
        depends_on:
            - jackett
        labels:
            - traefik.enable=true
            - traefik.http.routers.sonarr.rule=Host(`sonarr.${DDNS_DOMAIN}`)
            - traefik.http.routers.sonarr.entrypoints=websecure
            - traefik.http.routers.sonarr.tls.certresolver=myresolver

    radarr:
        
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 7878:7878
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
            - UMASK_SET=022
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/radarr:/config'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_STAGING_FOLDER}:/data/staging'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_MOVIES_FOLDER}:/data/movies'
            - '/etc/localtime:/etc/localtime:ro'
        links:
            # use http://jackett:8989 instead of http://localhost:8989 when adding indexer
            - jackett:jackett
        depends_on:
            - jackett

    jackett:
        
        image: linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 9117:9117
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
            - UMASK_SET=022
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/jackett:/config'
            - '${MEDIA_SERVER_ROOT}/${MEDIA_STAGING_FOLDER}:/data/staging'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - traefik.enable=true
            - traefik.http.routers.jackett.rule=Host('${JACKETT_SUBDOMAIN}.${DDNS_DOMAIN}')
            - traefik.http.routers.jackett.entrypoints=websecure
            - traefik.http.routers.jackett.tls.certresolver=myresolver
            
    duplicati:
    
        image: linuxserver/duplicati
        container_name: duplicati
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 8200:8200
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TIMEZONE}
            - UMASK_SET=022
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/duplicati:/config'
            - '${MEDIA_SERVER_ROOT}:${MEDIA_SERVER_ROOT}'
            
    tautulli:
        
        image: linuxserver/tautulli
        container_name: tautulli
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 8181:8181
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
            - UMASK_SET=022
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/tautulli:/config'
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
            - '/etc/localtime:/etc/localtime:ro'
        depends_on:
            - plex
            
    portainer:
        
        image: portainer/portainer:latest
        container_name: portainer
        restart: unless-stopped
        networks:
            - app-net
        ports:
            - 9000:9000
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
            - UMASK_SET=022
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
            
    ddclient:
    
        image: linuxserver/ddclient
        container_name: ddclient
        restart: unless-stopped
        environment:
            - TZ=${TIMEZONE}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${MEDIA_SERVER_ROOT}/${CONFIG_FOLDER}/ddclient/:/config'
    
            
networks:
    app-net:
